subspecies_frogs
subspecies_conifers <- children(conifers, db = "itis")
subspecies_conifers
subspecies_conifers
subspecies_conifers <- children(species_conifers, db = "itis")
subspecies_conifers <- children(species_conifers, db = "itis")
subspecies_conifers <- children(species_conifers$Abies, db = "itis")
species_conifers
#the species_birds object contains a list of dataframes
species_birds
#the species_birds object contains a list of two dataframes: one contains the list of nuthatch species and one is empty becasue the query was a species name not a genus name
species_birds$Sitta
#we can retrieve the list of species within *Sitta* using the $ symbol which retrieves a specific column
species_birds$Sitta$taxonname
birds[,-(nrow(birds))]
birds[-(nrow(birds))]
birds(-(nrow(birds)))
birds
birds[-(length(birds))]
#compare two functions for same bird dataset
#note that for our bird dataset, we don't want to get information on the outgroup because it is already a species binomial not a genus name
#Although we could just type the name "Sitta", we will do this by omitting the last entry (the outgroup) from the list (in case you want to know how to do that for the future when dealing with longer lists)
#We'll break this down into its components
#First, we want to know how long the list is
length(birds)
birds[-(length(birds))]
#We can retrieve the list of species within each genus using the $ symbol which retrieves a specific column
species_conifers$Abies$taxonname
species_conifers$Abies$taxonname
#We can retrieve the list of species within each genus using the $ symbol which retrieves a specific column
#For example, within the "species_conifers" object, we can specify the "Abies" dataframe and the "taxonname" column which includes the species names
species_conifers$Abies
species_conifers$Abies$taxonname
#we will take these five lists of names and join them into one list using the c() function
conifer_species_list <- c(species_conifers$Abies$taxonname, species_conifers$Thuja$taxonname, species_conifers$Picea$taxonname, species_conifers$Tsuga$taxonname, species_conifers$Ginkgo$taxonname)
conifer_species_list
birds[(length(birds))]
#For those datasets which now include the correct species names, we can make our new species name lists
frog_species_list <- frogs_resolved$unique_name
maple_species_list <- maples_resolved$unique_name
ant_species_list <- ants_resolved$unique_name
conifer_species_list
bird_species_list
bird_species_list <- c(species_birds, birds[(length(birds))])
bird_species_list
#We now have the version of the list we want for the query so we can insert it into our function
species_birds <- downstream(birds[-(length(birds))], downto = "species", db = "itis")
bird_species_list <- c(species_birds$Sitta$taxonname, birds[(length(birds))])
#For those datasets which now include the correct species names, we can make our new species name lists
frog_species_list <- frogs_resolved$unique_name
maple_species_list <- maples_resolved$unique_name
ant_species_list <- ants_resolved$unique_name
conifer_species_list
bird_species_list
frog_species_list
maple_species_list
ant_species_list
species_birds
species_birds2
#We can compare the other functions for same bird dataset. Are the results the same?
species_birds2 <- children(birds[-(length(birds))], db = "itis")
#We can compare the other functions for same bird dataset. Are the results the same?
species_birds2 <- children(birds[-(length(birds))], db = "itis")
conifers
subspecies_conifers <- children(conifer_species_list, db = "itis")
#We can compare the other functions for same bird dataset. Are the results the same?
species_birds2 <- children(birds[-(length(birds))], db = "itis")
species_birds2
species_birds
write.table(conifer_species_list, "./Output/conifer_species_names.txt", sep = "\t")
write.table(conifer_species_list, "./Output/conifer_species_names.txt", sep = "\t")
write.table(conifer_species_list, "./Output/conifer_species_names.txt")
write.table(conifer_species_list, "../Output/conifer_species_names.txt")
write.table(conifer_species_list, "../Output/conifer_species_names.txt", sep = "\t")
write.table(conifer_species_list, "../Output/conifer_species_names.txt", sep = "\t", colnames = FALSE, row.names = FALSE)
write.table(conifer_species_list, "../Output/conifer_species_names.txt", sep = "\t", col.names = FALSE, row.names = FALSE)
write.table(bird_species_list, "../Output/bird_species_names.txt", sep = "\t", col.names = FALSE, row.names = FALSE)
write.table(frog_species_list, "../Output/frog_species_names.txt", sep = "\t", col.names = FALSE, row.names = FALSE)
write.table(maple_species_list, "../Output/maple_species_names.txt", sep = "\t", col.names = FALSE, row.names = FALSE)
write.table(ant_species_list, "../Output/ant_species_names.txt", sep = "\t", col.names = FALSE, row.names = FALSE)
write.csv(birds_resolved, "../Output/birds_OTT_IDs.csv")
write.csv(birds_resolved, "../Output/birds_OTT_IDs.csv", row.names = FALSE)
write.csv(conifers_resolved, "../Output/birds_OTT_IDs.csv", row.names = FALSE)
write.csv(frogs_resolved, "../Output/birds_OTT_IDs.csv", row.names = FALSE)
write.csv(maples_resolved, "../Output/birds_OTT_IDs.csv", row.names = FALSE)
write.csv(ants_resolved, "../Output/birds_OTT_IDs.csv", row.names = FALSE
)
write.csv(conifers_resolved, "../Output/conifers_OTT_IDs.csv", row.names = FALSE)
write.csv(birds_resolved, "../Output/birds_OTT_IDs.csv", row.names = FALSE)
write.csv(conifers_resolved, "../Output/conifers_OTT_IDs.csv", row.names = FALSE)
write.csv(frogs_resolved, "../Output/frogs_OTT_IDs.csv", row.names = FALSE)
write.csv(maples_resolved, "../Output/maples_OTT_IDs.csv", row.names = FALSE)
write.csv(ants_resolved, "../Output/ants_OTT_IDs.csv", row.names = FALSE)
dim(birds_resolved)
birds_resolved
conifers_resolved[1:3, 1:5]
#Note that for our bird dataset, we don't want to get species name information for the outgroup because it is already a species binomial not a genus name
birds
birds[-(length(birds))]
species_conifers
species_conifers$Abies
species_conifers$Abies$taxonname
#####For assessment
subspecies_frogs <- children(frog_species_list, db = "itis")
subspecies_conifers <- children(conifer_species_list, db = "itis")
subspecies_conifers
#####For assessment
subspecies_frogs <- children(frog_species_list, db = "itis")
write.csv(subspecies_conifers, "../Admin/Answers/subspecies_conifers.csv")
write.table(subspecies_conifers, "../Admin/Answers/subspecies_conifers.txt")
class(subspecies_conifers)
subspecies_conifers
subspecies_conifers_df <- rbind(subspecies_conifers$`Abies balsamea`, subspecies_conifers$`Abies concolor`, subspecies_conifers$`Abies lasiocarpa`, subspecies_conifers$`Picea engelmannii`)
write.csv(subspecies_conifers_df, "../Admin/Answers/subspecies_conifers.csv")
subspecies_frogs
subspecies_conifers
str(birds_resolved)
summary(birds_resolved)
ncol(birds_resolved)
nrow(maples_resolved)
birds_resolved$is_synonym == TRUE
length(birds_resolved$is_synonym == TRUE)
length(birds_resolved[which(birds_resolved$is_synonym == TRUE),]
)
nrow(birds_resolved[which(birds_resolved$is_synonym == TRUE),])
nrow(birds_resolved[which(maples_resolved$is_synonym == TRUE),])
nrow(birds_resolved[which(ants_resolved$is_synonym == TRUE),])
nrow(birds_resolved[which(conifers_resolved$is_synonym == TRUE),])
nrow(birds_resolved[which(frogs_resolved$is_synonym == TRUE),])
nrow(birds_resolved[which(maples_resolved$is_synonym == TRUE),])
nrow(birds_resolved[which(ants_resolved$is_synonym == TRUE),])
nrow(birds_resolved[which(conifers_resolved$is_synonym == TRUE),])
nrow(birds_resolved[which(frogs_resolved$is_synonym == TRUE),])
nrow(birds_resolved[which(birds_resolved$is_synonym == TRUE),])
0
nrow(maples_resolved[which(maples_resolved$is_synonym == TRUE),])
1
nrow(ants_resolved[which(ants_resolved$is_synonym == TRUE),])
0
nrow(conifers_resolved[which(conifers_resolved$is_synonym == TRUE),])
0
nrow(frogs_resolved[which(frogs_resolved$is_synonym == TRUE),])
5
frogs_resolved
which(frogs_resolved$is_synonym == TRUE)
length(which(frogs_resolved$is_synonym == TRUE))
length(which(birds_resolved$is_synonym == TRUE))
0
length(which(maples_resolved$is_synonym == TRUE))
1
length(which(ants_resolved$is_synonym == TRUE))
0
length(which(conifer_resolved$is_synonym == TRUE))
length(which(conifers_resolved$is_synonym == TRUE))
0
length(which(frogs_resolved$is_synonym == TRUE))
5
#4) Which dataset(s) (**object(s)**) contain(s) taxa that have no taxonomic problems or name changes? Explain.
which(frogs_resolved$is_synonym == TRUE)
#4) Which dataset(s) (**object(s)**) contain(s) taxa that have no taxonomic problems or name changes? Explain.
ants_resolved
conifers_resolved
birds_resolved
ants_resolved
birds_resolved
ants_resolved
conifers_resolved
frogs_resolved
maples_resolved
#synonyms
Acer saccharum subsp. nigrum
subspecies_conifers_df
conifer_species_list
species_conifers$Abies$taxonname
nrow(species_conifers$Abies)
length(species_conifers$Abies$taxonname)
species_conifers$Abies$taxonname
unique(species_conifers$Abies$taxonname)
length(species_conifers$Picea$taxonname)
nrow(species_conifers$Picea)
species_conifers$Picea
conifer_species_names.txt
length*conifer_species_list)
length(conifer_species_list)
length(bird_species_list)
length(maple_species_list)
length(frog_species_list)
length(ant_species_list)
nrow(species_conifers$Abies)
class(species_conifers)
class(maple_species_list)
maples_resolved
frogs_resolved
example_file <- read.csv("../Data/Introduction_example/Acer_rubrum.csv",
stringsAsFactors = FALSE, header = TRUE)
head(example_file)
birds <- c("Sitta", "Troglodytes aedon")
#For insects, we're using a list of ant species from Alberta, Canada. We have an extra step of converting our object into a vector (list) instead of a dataframe.
ants_df <- read.delim("../Data/Ant_names.txt", header = FALSE, stringsAsFactors = FALSE)
#For insects, we're using a list of ant species from Alberta, Canada. We have an extra step of converting our object into a vector (list) instead of a dataframe.
ants_df <- read.delim("./Data/Ant_names.txt", header = FALSE, stringsAsFactors = FALSE)
str(ants_df)
ants <- as.vector(ants_df$V1)
str(ants)
#For plants, we have two lists: a list of maple species from Canada with horse chestnut as an outgroup,
#and a list of conifer genera with Ginkgo as an outgroup.
maples <- c("Acer circinatum", "Acer glabrum", "Acer macrophyllum", "Acer negundo", "Acer nigrum", "Acer pensylvanicum", "Acer rubrum", "Acer saccharum", "Acer saccharinum", "Acer spicatum", "Aesculus glabra")
conifers <- c("Abies", "Thuja", "Picea", "Tsuga", "Ginkgo")
conifers
birds
maples
#For amphibians, we have a list of frog species from BC, Canada with a salamander as an outgroup.
frogs <- c("Anaxyrus boreas", "Spea intermontanus", "Pseudacris maculata", "Hyla regilla", "Rana aurora", "Ascaphus truei", "Rana luteiventris", "Rana pretiosa", "Lithobates catesbeiana", "Lithobates clamitans", "Lithobates pipiens", "Lithobates sylvaticus", "Taricha granulosa")
frogs
#Match names using the taxonomic name resolution service
birds_resolved <- tnrs_match_names(birds)
library(rotl)
library(dplyr)
library(ape)
library(taxize)
#Match names using the taxonomic name resolution service
birds_resolved <- tnrs_match_names(birds)
ants_resolved <- tnrs_match_names(ants)
maples_resolved <- tnrs_match_names(maples)
conifers_resolved <- tnrs_match_names(conifers)
frogs_resolved <- tnrs_match_names(frogs)
#Inspect entire bird object
birds_resolved
nrow(maples_resolved)
#Get the first few rows of the ants object
head(ants_resolved)
#Get the first and third rows of the maples object
maples_resolved[c(1,3),]
#Get the first TO third rows and the first to fifth columns of the conifers object
conifers_resolved[1:3, 1:5]
#Get the "unique_name" and "is_synonym" columns of the frogs object
frogs_resolved$unique_name
frogs_resolved$is_synonym
#For those datasets which now include the correct species names, we can make our new species name lists
frog_species_list <- frogs_resolved$unique_name
maple_species_list <- maples_resolved$unique_name
ant_species_list <- ants_resolved$unique_name
#Here, we have specified to get names down to the species level
downstream("Sapindaceae", downto = "species", db = "itis")
#The children function only retrieves the level immediately below, so here we are retrieving the genus names
children("Sapindaceae", db = "itis")
#Note that for our bird dataset, we don't want to get species name information for the outgroup because
#it is already a species binomial not a genus name
birds
#First, we want to know how long the list is
length(birds)
#We want to get rid of the last entry (the Nth entry for a list of length N) for this query so
#we use the '-' symbol to indicate we want to remove this entry, using the [ ] we had used earlier to
#subset our data.
birds[-(length(birds))]
#We now have the version of the list we want for the query so we can insert it into our function
species_birds <- downstream(birds[-(length(birds))], downto = "species", db = "itis")
species_birds
#We can compare the other function for getting species names for same bird dataset. Are the results the same?
species_birds2 <- children(birds[-(length(birds))], db = "itis")
species_birds2
#If we want to create our final list of bird species including our ougroup, we can now
#add our last entry from the original taxon list back (omitting the "-" now becasue we want to
#include only that entry instead of exlcuding it)
bird_species_list <- c(species_birds$Sitta$taxonname, birds[(length(birds))])
bird_species_list
#We can now get species names for conifers - all the names in the list are genus names so
#we can query the entire list
species_conifers <- downstream(conifers, downto = "species", db = "itis")
species_conifers
#We can retrieve the list of species within each genus using the $ symbol which retrieves a specific column
#For example, within the 'species_conifers' list, we can specify the 'Abies' dataframe and
#the 'taxonname' column which includes the species names
species_conifers$Abies
species_conifers$Abies$taxonname
#We will take these five lists of names and join them into one list using the c() function
conifer_species_list <- c(species_conifers$Abies$taxonname, species_conifers$Thuja$taxonname,
species_conifers$Picea$taxonname, species_conifers$Tsuga$taxonname,
species_conifers$Ginkgo$taxonname)
#We now have five lists of species for our five groups of organisms
conifer_species_list
bird_species_list
frog_species_list
maple_species_list
ant_species_list
write.table(conifer_species_list, "../Output/conifer_species_names.txt", sep = "\t", col.names = FALSE, row.names = FALSE)
write.table(conifer_species_list, "./Output/conifer_species_names.txt", sep = "\t", col.names = FALSE, row.names = FALSE)
#read example csv file into R as an object
example_file <- read.csv("../Data/Introduction_example/Acer_rubrum.csv",
stringsAsFactors = FALSE, header = TRUE)
#read example csv file into R as an object
example_file <- read.csv("./Data/Introduction_example/Acer_rubrum.csv",
stringsAsFactors = FALSE, header = TRUE)
#look at first few rows of object
head(example_file)
#get number of rows in object
nrow(example_file)
#get number of columns in object
ncol(example_file)
#assign the first row of the data object to a new object
row1 <- example_file[1,]
#look at new row1 object
row1
#assign the first column of data object to a new object
col1 <- example_file[,1]
#view first few rows of the new col1 object
head(col1)
#view structure of the data object
str(example_file)
#read example csv file into R as an object
example_file <- read.csv("./Data/Introduction_example/Acer_rubrum.csv",
stringsAsFactors = FALSE, header = TRUE)
#look at first few rows of object
head(example_file)
#get number of rows in object
nrow(example_file)
#get number of columns in object
ncol(example_file)
#assign the first row of the data object to a new object
row1 <- example_file[1,]
saveRDS(row1, "../Output/Intermediate_output/row1.csv")
saveRDS(row1, "../Output/Intermediate_output/row1.rds")
saveRDS(row1, "./Output/Intermediate_output/row1.rds")
row1
#assign the first column of data object to a new object
col1 <- example_file[,1]
saveRDS(col1, "./Output/Intermediate_output/col1.rds")
col1
#For birds, we'll look at the genus Sitta or nuthatches. We also include one species of
#wren (Troglodytes) as an outgroup for phylogenetic analysis.
birds <- c("Sitta", "Troglodytes aedon")
saveRDS(birds, "./Output/Intermediate_output/birds.rds")
#For insects, we're using a list of ant species from Alberta, Canada. We have an extra step of
#converting our object into a vector (list) instead of a dataframe.
ants_df <- read.delim("./Data/Ant_names.txt", header = FALSE, stringsAsFactors = FALSE)
saveRDS(ants_df, "./Output/Intermediate_output/ants_df.rds")
saveRDS(ants, "./Output/Intermediate_output/ants.rds")
ants <- as.vector(ants_df$V1)
saveRDS(ants, "./Output/Intermediate_output/ants.rds")
#For plants, we have two lists: a list of maple species from Canada with horse chestnut as an outgroup,
#and a list of conifer genera with Ginkgo as an outgroup.
maples <- c("Acer circinatum", "Acer glabrum", "Acer macrophyllum", "Acer negundo", "Acer nigrum", "Acer pensylvanicum", "Acer rubrum", "Acer saccharum", "Acer saccharinum", "Acer spicatum", "Aesculus glabra")
conifers <- c("Abies", "Thuja", "Picea", "Tsuga", "Ginkgo")
saveRDS(maples, "./Output/Intermediate_output/maples.rds")
saveRDS(conifers, "./Output/Intermediate_output/conifers.rds")
#For amphibians, we have a list of frog species from BC, Canada with a salamander as an outgroup.
frogs <- c("Anaxyrus boreas", "Spea intermontanus", "Pseudacris maculata", "Hyla regilla", "Rana aurora", "Ascaphus truei", "Rana luteiventris", "Rana pretiosa", "Lithobates catesbeiana", "Lithobates clamitans", "Lithobates pipiens", "Lithobates sylvaticus", "Taricha granulosa")
saveRDS(frogs, "./Output/Intermediate_output/frogs.rds")
#Match names using the taxonomic name resolution service
birds_resolved <- tnrs_match_names(birds)
ants_resolved <- tnrs_match_names(ants)
maples_resolved <- tnrs_match_names(maples)
library(rotl)
library(dplyr)
library(ape)
library(taxize)
#Match names using the taxonomic name resolution service
birds_resolved <- tnrs_match_names(birds)
ants_resolved <- tnrs_match_names(ants)
maples_resolved <- tnrs_match_names(maples)
conifers_resolved <- tnrs_match_names(conifers)
frogs_resolved <- tnrs_match_names(frogs)
saveRDS(birds_resolved, "./Output/Intermediate_output/birds_resolved.rds")
saveRDS(ants_resolved, "./Output/Intermediate_output/ants_resolved.rds")
saveRDS(maples_resolved, "./Output/Intermediate_output/maples_resolved.rds")
saveRDS(conifers_resolved, "./Output/Intermediate_output/conifers_resolved.rds")
saveRDS(frogs_resolved, "./Output/Intermediate_output/frogs_resolved.rds")
#For those datasets which now include the correct species names, we can make our new species name lists
frog_species_list <- frogs_resolved$unique_name
maple_species_list <- maples_resolved$unique_name
ant_species_list <- ants_resolved$unique_name
saveRDS(frog_species_list, "./Output/Intermediate_output/frog_species_list.rds")
saveRDS(maple_species_list, "./Output/Intermediate_output/maple_species_list.rds")
saveRDS(ant_species_list, "./Output/Intermediate_output/ant_species_list.rds")
#Here, we have specified to get names down to the species level
sap_sp <- downstream("Sapindaceae", downto = "species", db = "itis")
saveRDS(sap_sp, "./Output/Intermediate_output/sapindaceae_species.rds")
#The children function only retrieves the level immediately below, so here we are retrieving the genus names
sap_g <- children("Sapindaceae", db = "itis")
saveRDS(sap_g, "./Output/Intermediate_output/sapindaceae_genera.rds")
#We now have the version of the list we want for the query so we can insert it into our function
species_birds <- downstream(birds[-(length(birds))], downto = "species", db = "itis")
saveRDS(species_birds, "./Output/Intermediate_output/species_birds.rds")
#We can compare the other function for getting species names for same bird dataset. Are the results the same?
species_birds2 <- children(birds[-(length(birds))], db = "itis")
saveRDS(species_birds2, "./Output/Intermediate_output/species_birds_2.rds")
#If we want to create our final list of bird species including our ougroup, we can now
#add our last entry from the original taxon list back (omitting the "-" now becasue we want to
#include only that entry instead of exlcuding it)
bird_species_list <- c(species_birds$Sitta$taxonname, birds[(length(birds))])
saveRDS(bird_species_list, "./Output/Intermediate_output/bird_species_list.rds")
#We can now get species names for conifers - all the names in the list are genus names so
#we can query the entire list
species_conifers <- downstream(conifers, downto = "species", db = "itis")
saveRDS(species_conifers, "./Output/Intermediate_output/species_conifers.rds")
#We will take these five lists of names and join them into one list using the c() function
conifer_species_list <- c(species_conifers$Abies$taxonname, species_conifers$Thuja$taxonname,
species_conifers$Picea$taxonname, species_conifers$Tsuga$taxonname,
species_conifers$Ginkgo$taxonname)
saveRDS(conifer_species_list, "./Output/Intermediate_output/conifer_species_list.rds")
write.csv(sapindaceae_species, "./Output/Intermediate_output/", sapindaceae_species.csv, row.names = FALSE)
#Here, we have specified to get names down to the species level
sapindaceae_species <- downstream("Sapindaceae", downto = "species", db = "itis")
#read example csv file into R as an object
example_file <- read.csv("./Data/Introduction_example/Acer_rubrum.csv",
stringsAsFactors = FALSE, header = TRUE)
source('~/PhD/Professional Development/Teaching/BIOME Institute/Project/Module_1/Scripts/Introduction_to_R.R')
#Match names using the taxonomic name resolution service
birds_resolved <- tnrs_match_names(birds)
library(rotl)
library(dplyr)
library(ape)
library(taxize)
birds <- c("Sitta", "Troglodytes aedon")
#For insects, we're using a list of ant species from Alberta, Canada. We have an extra step of converting our object into a vector (list) instead of a dataframe.
ants_df <- read.delim("../Data/Ant_names.txt", header = FALSE, stringsAsFactors = FALSE)
str(ants_df)
ants <- as.vector(ants_df$V1)
str(ants)
#For plants, we have two lists: a list of maple species from Canada with horse chestnut as an outgroup, and a list of conifer genera with Ginkgo as an outgroup.
maples <- c("Acer circinatum", "Acer glabrum", "Acer macrophyllum", "Acer negundo", "Acer nigrum", "Acer pensylvanicum", "Acer rubrum", "Acer saccharum", "Acer saccharinum", "Acer spicatum", "Aesculus glabra")
conifers <- c("Abies", "Thuja", "Picea", "Tsuga", "Ginkgo")
#For amphibians, we have a list of frog species from BC, Canada with a salamander as an outgroup.
frogs <- c("Anaxyrus boreas", "Spea intermontanus", "Pseudacris maculata", "Hyla regilla", "Rana aurora", "Ascaphus truei", "Rana luteiventris", "Rana pretiosa", "Lithobates catesbeiana", "Lithobates clamitans", "Lithobates pipiens", "Lithobates sylvaticus", "Taricha granulosa")
#Match names using the taxonomic name resolution service
birds_resolved <- tnrs_match_names(birds)
ants_resolved <- tnrs_match_names(ants)
ants_resolved <- tnrs_match_names(ants)
maples_resolved <- tnrs_match_names(maples)
conifers_resolved <- tnrs_match_names(conifers)
frogs_resolved <- tnrs_match_names(frogs)
str(birds_resolved)
length(birds_resolved)
#Inspect entire bird object
birds_resolved
nrow(maples_resolved)
#Get the first and third rows of the maples object
maples_resolved[c(1,3),]
#Get the first few rows of the ants object
head(ants_resolved)
#Get the first to third rows and the first to fifth columns of the conifers object
conifers_resolved[1:3, 1:5]
#Get the "unique_name" and "is_synonym" columns of the frogs object
frogs_resolved$unique_name
frogs_resolved$is_synonym
frogs_resolved
#For those datasets which now include the correct species names, we can make our new species name lists
frog_species_list <- frogs_resolved$unique_name
ant_species_list <- ants_resolved$unique_name
#Here, we have specified to get names down to the species level
sapindaceae_species <- downstream("Sapindaceae", downto = "species", db = "itis")
#The children function only retrieves the level immediately below, so here we are retrieving the genus names
sapindaceae_genera <- children("Sapindaceae", db = "itis")
#Note that for our bird dataset, we don't want to get species name information for the outgroup because it is already a species binomial not a genus name
birds
#We now have the version of the list we want for the query so we can insert it into our function
species_birds <- downstream(birds[-(length(birds))], downto = "species", db = "itis")
conifer_species_list
#We can compare the other function for getting species names for same bird dataset. Are the results the same?
species_birds2 <- children(birds[-(length(birds))], db = "itis")
bird_species_list <- c(species_birds$Sitta$taxonname, birds[(length(birds))])
#We can now get species names for conifers - all the names in the list are genus names so we can query the entire list
species_conifers <- downstream(conifers, downto = "species", db = "itis")
#We will take these five lists of names and join them into one list using the c() function
conifer_species_list <- c(species_conifers$Abies$taxonname, species_conifers$Thuja$taxonname, species_conifers$Picea$taxonname, species_conifers$Tsuga$taxonname, species_conifers$Ginkgo$taxonname)
conifer_species_list
ants_df <- read.delim("../Data/Ant_names.txt", header = FALSE, stringsAsFactors = FALSE
)
str()
#For amphibians, we have a list of frog species from BC, Canada with a salamander as an outgroup.
frogs <- c("Anaxyrus boreas", "Spea intermontanus", "Pseudacris maculata", "Hyla regilla", "Rana aurora", "Ascaphus truei", "Rana luteiventris", "Rana pretiosa", "Lithobates catesbeiana", "Lithobates clamitans" "Lithobates pipiens", "Lithobates sylvaticus", "Taricha granulosa")
conifers <- c("Abies" "Thuja", "Picea", "Tsuga", "Ginkgo")
conifers <- c("Abies", a "Thuja", "Picea", "Tsuga", "Ginkgo")
ant
birds_resolved <- tnrs_match_names()
birds_resolved <- tnrs_match_names(birds, tomato)
birds_resolved <- tnrs_match_names(birds, "tomato")
maples_resolved[c(1,12),]
maples_resolved[c(1,3),15]
#Here, we have specified to get names down to the species level
sapindaceae_species <- downstream("Sapindaceae", downto = "speices", db = "itis")
write.table(ant_species_list, "../Outputs/ant_species_names.txt", sep = "\t", col.names = FALSE, row.names = FALSE)
#This is just an example: replace object name and file name with the appropriate names
row1 <- readRDS("./Output/Intermediate_output/row1.rds")
#This is just an example: replace object name and file name with the appropriate names
row1 <- readRDS("../Output/Intermediate_output/row1.rds")
#Get the first few rows of the ants object
head(ants_resolved)
frogs_resolved %>%
filter(is.synonym == TRUE) %>%
select(search_string)
frogs_resolved
frogs_resolved %>%
filter(is_synonym == TRUE) %>%
select(search_string)
#If they are more comfortable with R, they may do something like:
frogs_resolved$search_string[which(frogs_resolved$is_synonym == TRUE)]
sapindaceae_species
#There are two options for functions to retrieve names at a lower taxonomic level
#The downstream function can retrieve different levels of taxonomic information (here, it is specified to genus)
Cactaceae_genera <- downstream("Cactaceae", downto = "genus", db = "itis")
nrow(Cactaceae_genera)
nrow(Cactaceae_genera$Cactaceae)
length(Cactaceae_genera$Cactaceae$taxonname)
count(Cactaceae_genera$Cactaceae$taxonname)
#The children function only retrieves the level immediately below names
Cactaceae_genera <- children("Cactaceae", db = "itis")
#For output from downstream
nrow(Cactaceae_genera$Cactaceae)
Cactaceae_genera
str(ants)
ants_df
